<?php
/**
 * PlaceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Metatavu\LinkedEvents
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Linked Events information API
 *
 * Linked Events provides categorized data on events and places using JSON-LD format.  Events can be searched by date and location. Location can be exact address or larger area such as neighbourhood or borough  JSON-LD format is streamlined using include mechanism. API users can request that certain fields are included directly into the result, instead of being hyperlinks to objects.  Several fields are multilingual. These are implemented as object with each language variant as property. In this specification each multilingual field has (fi,sv,en) property triplet as example.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Metatavu\LinkedEvents;

/**
 * PlaceTest Class Doc Comment
 *
 * @category    Class */
// * @description Places describe physical locations for events and means for contacting people responsible for these locations. Place definitions come from organizations publishing events (field \&quot;publisher\&quot;) and can thus have slightly different semantics between places sourced from different organizations.
/**
 * @package     Metatavu\LinkedEvents
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PlaceTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Place"
     */
    public function testPlace()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "customData"
     */
    public function testPropertyCustomData()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "images"
     */
    public function testPropertyImages()
    {
    }

    /**
     * Test attribute "originId"
     */
    public function testPropertyOriginId()
    {
    }

    /**
     * Test attribute "createdTime"
     */
    public function testPropertyCreatedTime()
    {
    }

    /**
     * Test attribute "lastModifiedTime"
     */
    public function testPropertyLastModifiedTime()
    {
    }

    /**
     * Test attribute "infoUrl"
     */
    public function testPropertyInfoUrl()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "position"
     */
    public function testPropertyPosition()
    {
    }

    /**
     * Test attribute "email"
     */
    public function testPropertyEmail()
    {
    }

    /**
     * Test attribute "telephone"
     */
    public function testPropertyTelephone()
    {
    }

    /**
     * Test attribute "contactType"
     */
    public function testPropertyContactType()
    {
    }

    /**
     * Test attribute "streetAddress"
     */
    public function testPropertyStreetAddress()
    {
    }

    /**
     * Test attribute "addressLocality"
     */
    public function testPropertyAddressLocality()
    {
    }

    /**
     * Test attribute "addressRegion"
     */
    public function testPropertyAddressRegion()
    {
    }

    /**
     * Test attribute "postalCode"
     */
    public function testPropertyPostalCode()
    {
    }

    /**
     * Test attribute "postOfficeBoxNum"
     */
    public function testPropertyPostOfficeBoxNum()
    {
    }

    /**
     * Test attribute "addressCountry"
     */
    public function testPropertyAddressCountry()
    {
    }

    /**
     * Test attribute "deleted"
     */
    public function testPropertyDeleted()
    {
    }

    /**
     * Test attribute "dataSource"
     */
    public function testPropertyDataSource()
    {
    }

    /**
     * Test attribute "publisher"
     */
    public function testPropertyPublisher()
    {
    }
}
